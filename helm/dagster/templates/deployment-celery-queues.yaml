---
{{- if eq .Values.runLauncher.type "CeleryK8sRunLauncher" }}
{{- $celeryK8sRunLauncherConfig := .Values.runLauncher.config.celeryK8sRunLauncher }}
{{ range $queue := $celeryK8sRunLauncherConfig.workerQueues }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "dagster.workers.fullname" $ -}}-{{- $queue.name }}
  labels:
    {{- include "dagster.labels" $ | nindent 4 }}
    component: celery
  annotations:
    {{- range $key, $value := $celeryK8sRunLauncherConfig.annotations }}
    {{ $key }}: {{ $value | squote }}
    {{- end }}
spec:
  replicas: {{ $queue.replicaCount }}
  selector:
    matchLabels:
      {{- include "dagster.selectorLabels" $ | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "dagster.selectorLabels" $ | nindent 8 }}
        {{- range $key, $value := $queue.labels }}
        {{ $key }}: {{ $value | squote }}
        {{- end }}
      annotations:
        checksum/dagster-instance: {{ include (print $.Template.BasePath "/configmap-instance.yaml") $ | sha256sum }}
        {{- range $key, $value := $celeryK8sRunLauncherConfig.annotations }}
        {{ $key }}: {{ $value | squote }}
        {{- end }}
    spec:
    {{- with $.Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      serviceAccountName: {{ include "dagster.serviceAccountName" $ }}
      automountServiceAccountToken: true
      securityContext:
        {{- toYaml $celeryK8sRunLauncherConfig.podSecurityContext | nindent 8 }}
      initContainers:
        {{- if $celeryK8sRunLauncherConfig.checkDbReadyInitContainer }}
        - name: check-db-ready
          image: {{ include "dagster.externalPostgresImage.name" $.Values.postgresql.image | quote }}
          imagePullPolicy: "{{- $.Values.postgresql.image.pullPolicy -}}"
          command: ['sh', '-c', {{ include "dagster.postgresql.pgisready" $ | squote }}]
          securityContext:
            {{- toYaml $celeryK8sRunLauncherConfig.securityContext | nindent 12 }}
        {{- end }}
        {{- if $.Values.rabbitmq.enabled }}
        - name: check-rabbitmq-ready
          image: {{ include "dagster.externalImage.name" $.Values.busybox.image | quote }}
          imagePullPolicy: {{ $.Values.busybox.image.pullPolicy | quote }}
          command: ["sh", "-c", {{ include "dagster.rabbitmq.alivenessTest" $ | quote }}]
          securityContext:
            {{- toYaml $celeryK8sRunLauncherConfig.securityContext | nindent 12 }}
        {{- end }}
      containers:
        - name: {{ $.Chart.Name }}
          securityContext:
            {{- toYaml $celeryK8sRunLauncherConfig.securityContext | nindent 12 }}
          imagePullPolicy: {{ $celeryK8sRunLauncherConfig.image.pullPolicy }}
          image: {{ include "dagster.dagsterImage.name" (list $ $celeryK8sRunLauncherConfig.image) | quote }}
          command: ["dagster-celery"]
          args: ["worker", "start", "-A", "dagster_celery_k8s.app", "-y", "{{ $.Values.global.dagsterHome }}/celery-config.yaml", "-q", "{{- $queue.name -}}", {{- if $queue.additionalCeleryArgs -}}"--", "{{- join "\",\"" $queue.additionalCeleryArgs -}}" {{- end -}}]
          env:
            - name: DAGSTER_PG_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "dagster.postgresql.secretName" $ | quote }}
                  key: postgresql-password
          envFrom:
            - configMapRef:
                name: {{ template "dagster.fullname" $ }}-celery-worker-env
            {{- range $envConfigMap := $celeryK8sRunLauncherConfig.envConfigMaps }}
            - configMapRef: {{- $envConfigMap | toYaml | nindent 16 }}
            {{- end }}
            - secretRef:
                name: {{ $.Values.global.celeryConfigSecretName }}
            {{- range $envSecret := $celeryK8sRunLauncherConfig.envSecrets }}
            - secretRef: {{- $envSecret | toYaml | nindent 16 }}
            {{- end }}
          volumeMounts:
            - name: dagster-instance
              mountPath: "{{ $.Values.global.dagsterHome }}/dagster.yaml"
              subPath: dagster.yaml
            - name: dagster-celery
              mountPath: "{{ $.Values.global.dagsterHome }}/celery-config.yaml"
              subPath: celery.yaml
            {{- range $volumeMount := $celeryK8sRunLauncherConfig.volumeMounts }}
            - {{- $volumeMount | toYaml | nindent 14 }}
            {{- end }}
          resources:
            {{- toYaml $celeryK8sRunLauncherConfig.resources | nindent 12 }}
      {{- if $celeryK8sRunLauncherConfig.livenessProbe }}
        {{- if not $celeryK8sRunLauncherConfig.livenessProbe.exec }}
          livenessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - dagster-celery status -A dagster_celery_k8s.app -y {{ $.Values.global.dagsterHome }}/celery-config.yaml | grep "${HOSTNAME}:.*OK"
            {{- if hasKey $celeryK8sRunLauncherConfig.livenessProbe "initialDelaySeconds" }}
            initialDelaySeconds:
              {{- toYaml $celeryK8sRunLauncherConfig.livenessProbe.initialDelaySeconds | nindent 14 }}
            {{- end }}
            {{- if hasKey $celeryK8sRunLauncherConfig.livenessProbe "periodSeconds" }}
            periodSeconds:
              {{- toYaml $celeryK8sRunLauncherConfig.livenessProbe.periodSeconds | nindent 14 }}
            {{- end }}
            {{- if hasKey $celeryK8sRunLauncherConfig.livenessProbe "timeoutSeconds" }}
            timeoutSeconds:
              {{- toYaml $celeryK8sRunLauncherConfig.livenessProbe.timeoutSeconds | nindent 14 }}
            {{- end }}
            {{- if hasKey $celeryK8sRunLauncherConfig.livenessProbe "successThreshold" }}
            successThreshold:
              {{- toYaml $celeryK8sRunLauncherConfig.livenessProbe.successThreshold | nindent 14 }}
            {{- end }}
            {{- if hasKey $celeryK8sRunLauncherConfig.livenessProbe "failureThreshold" }}
            failureThreshold:
              {{- toYaml $celeryK8sRunLauncherConfig.livenessProbe.failureThreshold | nindent 14 }}
            {{- end }}
        {{- else}}
          livenessProbe:
          {{- toYaml $celeryK8sRunLauncherConfig.livenessProbe | nindent 12 }}
        {{- end }}
      {{- end }}
      nodeSelector: {{- $queue.nodeSelector | default $celeryK8sRunLauncherConfig.nodeSelector | toYaml | nindent 8 }}
      volumes:
        - name: dagster-instance
          configMap:
            name: {{ template "dagster.fullname" $ }}-instance
        - name: dagster-celery
          configMap:
            name: {{ template "dagster.fullname" $ }}-celery-{{- $queue.name }}
        {{- range $volume := $celeryK8sRunLauncherConfig.volumes }}
        - {{- $volume | toYaml | nindent 10 }}
        {{- end }}
    {{- with $celeryK8sRunLauncherConfig.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with $celeryK8sRunLauncherConfig.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- if $celeryK8sRunLauncherConfig.schedulerName }}
      schedulerName: {{ $celeryK8sRunLauncherConfig.schedulerName }}
    {{- end }}
---
{{ end }}
{{ end }}
