/**
 * THIS FILE IS GENERATED BY `yarn generate-integration-docs`.
 *
 * DO NOT EDIT MANUALLY.
 */

import {IntegrationFrontmatter} from '../types';
import airliftLogo from './logos/airflow.svg';

export const logo = airliftLogo;

export const frontmatter: IntegrationFrontmatter = {
  id: 'airlift',
  status: 'published',
  name: 'Airlift',
  title: 'Dagster & Airlift',
  excerpt: 'Easily integrate Dagster and Airflow.',
  partnerlink: '',
  categories: ['ETL'],
  enabledBy: [],
  enables: [],
  tags: ['dagster-supported', 'other'],
};

export const content =
  'import Beta from \'@site/docs/partials/\\_Beta.md\';\n\n<Beta />\n\nAirlift is a toolkit for integrating Dagster and Airflow. Using [`dagster-airflift`](/api/python-api/libraries/dagster-airlift), you can:\n\n- Observe Airflow instances from within Dagster\n- Accelerate the migration of Airflow DAGs to Dagster assets with opinionated tooling\n\n## Compatibility\n\n### REST API Availability\n\nAirlift depends on the availability of Airflow’s REST API. Airflow’s REST API was made stable in its 2.0 release (Dec 2020) and was introduced experimentally in 1.10 in August 2018. Currently Airflow requires the availability of the REST API.\n\n- **OSS:** Stable as of 2.00\n- **MWAA**\n  - Note: only available in Airflow 2.4.3 or later on MWAA.\n- **Cloud Composer:** No limitations as far as we know.\n- **Astronomer:** No limitations as far as we know.\n\n## Migrating from Airflow to Dagster\n\nYou can use Airlift to migrate an Airflow DAG to Dagster assets. Airlift enables a migration process that\n\n- Can be done task-by-task in any order with minimal coordination\n- Has task-by-task rollback to reduce risk\n- Retains Airflow DAG structure and execution history during the migration\n\nTo get started, see "[Migrate from Airflow to Dagster at the task level](/guides/migrate/airflow-to-dagster/task-level-migration)".\n\n:::note\n\nIf you need to migrate at the DAG level, see "[Migrate from Airflow to Dagster at the DAG level](/guides/migrate/airflow-to-dagster/dag-level-migration)".\n\n:::\n\n## Federating execution between Airflow instances with Dagster\n\nYou can use Airlift to observe DAGs from multiple Airflow instances, and federate execution between them using Dagster as a centralized control plane.\n\nTo get started, see "[Federate execution between Airflow instances with Dagster](/guides/migrate/airflow-to-dagster/federation)".\n\n## Airflow operator migration\n\nYou can easily migrate common Airflow operators to Dagster. For more information, see "[Airflow operator migration](/guides/migrate/airflow-to-dagster/airflow-operator-migration)".';
