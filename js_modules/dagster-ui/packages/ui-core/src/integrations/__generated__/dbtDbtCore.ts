/**
 * THIS FILE IS GENERATED BY `yarn generate-integration-docs`.
 *
 * DO NOT EDIT MANUALLY.
 */

import {IntegrationFrontmatter} from '../types';
import dbtDbtCoreLogo from './logos/dbt.svg';

export const logo = dbtDbtCoreLogo;

export const frontmatter: IntegrationFrontmatter = {
  id: 'dbtDbtCore',
  status: 'published',
  name: 'dbt',
  title: 'Dagster & dbt',
  excerpt: 'Put your dbt transformations to work, directly from within Dagster.',
  partnerlink: 'https://www.getdbt.com/',
  categories: ['ETL'],
  enabledBy: [],
  enables: [],
  tags: ['dagster-supported', 'etl'],
};

export const content =
  'Dagster orchestrates dbt alongside other technologies, so you can schedule dbt with Spark, Python, etc. in a single data pipeline.\n\nDagster assets understand dbt at the level of individual dbt models. This means that you can:\n\n- Use Dagster\'s UI or APIs to run subsets of your dbt models, seeds, and snapshots.\n- Track failures, logs, and run history for individual dbt models, seeds, and snapshots.\n- Define dependencies between individual dbt models and other data assets. For example, put dbt models after the Fivetran-ingested table that they read from, or put a machine learning after the dbt models that it\'s trained from.\n\n### Installation\n\n```bash\npip install dagster-dbt\n```\n\n### Example\n\n<CodeExample path="docs_snippets/docs_snippets/integrations/dbt.py" language="python" />\n\n### About dbt\n\n**dbt** is a SQL-first transformation workflow that lets teams quickly and collaboratively deploy analytics code following software engineering best practices like modularity, portability, CI/CD, and documentation.\n\n<aside className="rounded-lg">\n\nAre you looking to learn more on running Dagster with dbt? Explore the [Dagster University dbt course](https://courses.dagster.io/courses/dagster-dbt).\n\n</aside>';
