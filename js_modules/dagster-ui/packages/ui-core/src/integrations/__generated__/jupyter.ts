/**
 * THIS FILE IS GENERATED BY `yarn generate-integration-docs`.
 *
 * DO NOT EDIT MANUALLY.
 */

import {IntegrationFrontmatter} from '../types';
import jupyterLogo from './logos/jupyter.svg';

export const logo = jupyterLogo;

export const frontmatter: IntegrationFrontmatter = {
  id: 'jupyter',
  status: 'published',
  name: 'Jupyter Notebooks',
  title: 'Dagster & Jupyter Notebooks',
  excerpt: 'Dagstermill eliminates the tedious "productionization" of Jupyter notebooks.',
  partnerlink: '',
  categories: ['Compute'],
  enabledBy: ['dagster-dagstermill'],
  enables: [],
  tags: ['dagster-supported', 'compute'],
};

export const content =
  'import Beta from \'@site/docs/partials/\\_Beta.md\';\n\n<Beta />\n\nDagstermill eliminates the tedious "productionization" of Jupyter notebooks.\n\nUsing the Dagstermill library enables you to:\n\n- View notebooks directly in the Dagster UI without needing to set up a Jupyter kernel\n- Define data dependencies to flow inputs and outputs from assets/ops to notebooks, between notebooks, and from notebooks to other assets/ops\n- Use Dagster resources and the Dagster config system inside notebooks\n- Aggregate notebook logs with logs from other Dagster assets and ops\n- Yield custom materializations and other Dagster events from your notebook code\n\n### About Jupyter\n\nFast iteration, the literate combination of arbitrary code with markdown blocks, and inline plotting make notebooks an indispensable tool for data science. The **Dagstermill** package makes it easy to run notebooks using the Dagster tools and to integrate them into data jobs with heterogeneous ops: for instance, Spark jobs, SQL statements run against a data warehouse, or arbitrary Python code.';
