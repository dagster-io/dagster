/**
 * THIS FILE IS GENERATED BY `yarn generate-integration-docs`.
 *
 * DO NOT EDIT MANUALLY.
 */

import {IntegrationFrontmatter} from '../types';
import geminiLogo from './logos/gemini.svg';

export const logo = geminiLogo;

export const frontmatter: IntegrationFrontmatter = {
  id: 'gemini',
  status: 'published',
  name: 'Gemini',
  title: 'Dagster & Gemini',
  excerpt: 'Integrate Gemini calls into your Dagster pipelines, without breaking the bank.',
  partnerlink: 'https://ai.google.dev/docs',
  categories: ['Other'],
  enabledBy: [],
  enables: [],
  tags: ['dagster-supported'],
};

export const content =
  'The `dagster-gemini` library allows you to easily interact with the Gemini REST API using the Gemini Python API to build AI steps into your Dagster pipelines. You can also log Gemini API usage metadata in Dagster Insights, giving you detailed observability on API call credit consumption.\n\nWhen paired with Dagster assets, the resource automatically logs Gemini usage metadata in asset metadata.\n\n### Installation\n\n```bash\npip install dagster dagster-gemini\n```\n\n### Example\n\n\n```python\nfrom dagster_gemini import GeminiResource\n\nimport dagster as dg\n\n\n@dg.asset(compute_kind="gemini")\ndef gemini_asset(context: dg.AssetExecutionContext, gemini: GeminiResource):\n    with gemini.get_model(context) as model:\n        response = model.generate_content("Generate a short sentence on tests")\n\n\ndefs = dg.Definitions(\n    assets=[gemini_asset],\n    resources={\n        "gemini": GeminiResource(\n            api_key=dg.EnvVar("GEMINI_API_KEY"),\n            generative_model_name="gemini-1.5-flash",\n        ),\n    },\n)\n```\n        \n\n### About Gemini\n\nGemini is Google\'s most capable AI model family, designed to be multimodal from the ground up. It can understand and combine different types of information like text, code, audio, images, and video. Gemini comes in different sizes optimized for different use cases, from the lightweight Gemini Nano for on-device tasks to the powerful Gemini Ultra for complex reasoning. The model demonstrates strong performance across language understanding, coding, reasoning, and creative tasks.';
