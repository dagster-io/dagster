/**
 * THIS FILE IS GENERATED BY `yarn generate-integration-docs`.
 *
 * DO NOT EDIT MANUALLY.
 */

import {IntegrationFrontmatter} from '../types';
import obstoreLogo from './logos/obstore.png';

export const logo = obstoreLogo;

export const frontmatter: IntegrationFrontmatter = {
  id: 'obstore',
  status: 'published',
  name: 'obstore',
  title: 'Dagster & obstore',
  excerpt:
    'The community-supported `dagster-obstore` package provides an integration with obstore.',
  partnerlink: '',
  categories: [],
  enabledBy: [],
  enables: [],
  tags: [],
};

export const content =
  'The community-supported `dagster-obstore` package provides an integration with obstore, providing three lean integrations with object stores, ADLS, GCS & S3.\n\n### S3ComputeLogManager\n\nThe `S3ComputeLogManager` writes `stdout` and `stderr` to any S3 compatible endpoint.\n\n```yaml\n# there are multiples ways to configure the S3ComputeLogManager\n# Explicitly set S3 secrets\ncompute_logs:\n  module:  dagster_obstore.s3.compute_log_manager\n  class: S3ComputeLogManager\n  config:\n    bucket: "dagster-logs"\n    access_key_id:\n      env: ACCESS_KEY_ID\n    secret_access_key:\n      env: SECRET_KEY\n    local_dir: "/tmp/dagster-logs"\n    allow_http: false\n    allow_invalid_certificates: false\n    timeout: "60s"  # Timeout for obstore requests\n    region: "us-west-1"\n# Use S3 with custom endpoint (Minio, Cloudflare R2 etc.)\ncompute_logs:\n  module:  dagster_obstore.s3.compute_log_manager\n  class: S3ComputeLogManager\n  config:\n    bucket: "dagster-logs"\n    access_key_id: "access-key-id"\n    secret_access_key: "my-key"\n    local_dir: "/tmp/dagster-logs"\n    endpoint: "http://alternate-s3-host.io"\n    region: "us-west-1"\n# Don\'t set secrets through config, but let obstore pick it up from ENV VARS\ncompute_logs:\n  module:  dagster_obstore.s3.compute_log_manager\n  class: S3ComputeLogManager\n  config:\n    bucket: "dagster-logs"\n    local_dir: "/tmp/dagster-logs"\n```\n\n### ADLSComputeLogManager\n\nThe `ADLSComputeLogManager` writes `stdout` and `stderr` to Azure Datalake/Blob storage.\n\n```yaml\n# there are multiples ways to configure the ADLSComputeLogManager\n# Authenticate with access key\ncompute_logs:\n  module:  dagster_obstore.azure.compute_log_manager\n  class: ADLSComputeLogManager\n  config:\n    storage_account: "my-az-account"\n    container: "dagster-logs"\n    access_key:\n      env: ACCESS_KEY\n    local_dir: "/tmp/dagster-logs"\n    allow_http: false\n    allow_invalid_certificates: false\n    timeout: "60s"  # Timeout for obstore requests\n# Authenticate with service principal\ncompute_logs:\n  module:  dagster_obstore.azure.compute_log_manager\n  class: ADLSComputeLogManager\n  config:\n    storage_account: "my-az-account"\n    container: "dagster-logs"\n    client_id: "access-key-id"\n    client_secret: "my-key"\n    tenant_id: "tenant-id"\n    local_dir: "/tmp/dagster-logs"\n# Authenticate with use_azure_cli\ncompute_logs:\n  module:  dagster_obstore.azure.compute_log_manager\n  class: ADLSComputeLogManager\n  config:\n    storage_account: "my-az-account"\n    container: "dagster-logs"\n    use_azure_cli: true\n    local_dir: "/tmp/dagster-logs"\n# Don\'t set secrets through config, but let obstore pick it up from ENV VARS\ncompute_logs:\n  module:  dagster_obstore.azure.compute_log_manager\n  class: ADLSComputeLogManager\n  config:\n    storage_account: "my-az-account"\n    container: "dagster-logs"\n    local_dir: "/tmp/dagster-logs"\n```\n\n### GCSComputeLogManager\n\nThe `GCSComputeLogManager` writes `stdout` and `stderr` to Google Cloud Storage.\n\n```yaml\n# there are multiples ways to configure the GCSComputeLogManager\n# Authenticate with service account\ncompute_logs:\n  module:  dagster_obstore.gcs.compute_log_manager\n  class: GCSComputeLogManager\n  config:\n    bucket: "dagster-logs"\n    service_account: "access-key-id"\n    service_account_key: "my-key"\n    local_dir: "/tmp/dagster-logs"\n# Don\'t set secrets through config, but let obstore pick it up from ENV VARS\ncompute_logs:\n  module:  dagster_obstore.gcs.compute_log_manager\n  class: GCSComputeLogManager\n  config:\n    bucket: "dagster-logs"\n    local_dir: "/tmp/dagster-logs"\n```\n\n---\n\nFor more information, see the [dagster-obstore GitHub repository](https://github.com/dagster-io/community-integrations/tree/main/libraries/dagster-obstore).';
