[tox]
skipsdist = true

[testenv]
download = True
passenv =
    CI_*
    BUILDKITE*
    PYTEST_ADDOPTS
    PYTEST_PLUGINS
    DAGSTER_GIT_REPO_DIR
    AIRLIFT_MWAA*
install_command = python3 {env:DAGSTER_GIT_REPO_DIR}/scripts/uv-retry-install.py {opts} {packages}
deps =
  -e ../../../python_modules/dagster[test,test-components]
  -e ../../../python_modules/dagster-test
  -e ../../../python_modules/dagster-pipes
  -e ../../../python_modules/libraries/dagster-shared
  -e ../../../python_modules/dagster-webserver
  -e ../../../python_modules/dagster-graphql
  -e ../../../python_modules/libraries/dagster-dbt
  -e ../../../python_modules/libraries/dagster-k8s
  -e ../../../python_modules/libraries/dagster-dg-cli
  -e ../../../python_modules/libraries/dagster-dg-core
  -e ../../../python_modules/libraries/dagster-cloud-cli
  dbt-duckdb
allowlist_externals =
  /bin/bash
  uv
  make
  python3
commands =
  # We need to rebuild the UI to ensure that the dagster-webserver can run
  make -C ../../.. rebuild_ui
  !windows: /bin/bash -c '! pip list --exclude-editable | grep -e dagster'
  # Run tests for both Airflow 2 and 3
  tox -e airflow2
  python3 -c "import sys; exit(0 if sys.version_info >= (3, 12) else 1)" && tox -e airflow3 || echo "Skipping airflow3 tests - Python 3.12+ required"

[testenv:airflow2]
download = True
passenv =
    CI_*
    BUILDKITE*
    PYTEST_ADDOPTS
    PYTEST_PLUGINS
    DAGSTER_GIT_REPO_DIR
    AIRLIFT_MWAA*
install_command = python3 {env:DAGSTER_GIT_REPO_DIR}/scripts/uv-retry-install.py {opts} {packages}
deps =
  -e ../../../python_modules/dagster[test,test-components]
  -e ../../../python_modules/dagster-test
  -e ../../../python_modules/dagster-pipes
  -e ../../../python_modules/libraries/dagster-shared
  -e ../../../python_modules/dagster-webserver
  -e ../../../python_modules/dagster-graphql
  -e ../../../python_modules/libraries/dagster-dbt
  -e ../../../python_modules/libraries/dagster-dg-cli
  -e ../../../python_modules/libraries/dagster-dg-core
  -e ../../../python_modules/libraries/dagster-cloud-cli
  -e .[core,mwaa,test-airflow2,in-airflow]
  dbt-duckdb
allowlist_externals =
  /bin/bash
  uv
  make
commands =
  # We need to rebuild the UI to ensure that the dagster-webserver can run
  make -C ../../.. rebuild_ui
  !windows: /bin/bash -c '! pip list --exclude-editable | grep -e dagster'
  pytest ./dagster_airlift_tests --snapshot-warn-unused -vv {posargs}

[testenv:airflow3]
download = True
passenv =
    CI_*
    BUILDKITE*
    PYTEST_ADDOPTS
    PYTEST_PLUGINS
    DAGSTER_GIT_REPO_DIR
    AIRLIFT_MWAA*
install_command = python3 {env:DAGSTER_GIT_REPO_DIR}/scripts/uv-retry-install.py {opts} {packages}
deps =
  -e ../../../python_modules/dagster[test,test-components]
  -e ../../../python_modules/dagster-test
  -e ../../../python_modules/dagster-pipes
  -e ../../../python_modules/libraries/dagster-shared
  -e ../../../python_modules/dagster-webserver
  -e ../../../python_modules/dagster-graphql
  -e ../../../python_modules/libraries/dagster-dbt
  -e ../../../python_modules/libraries/dagster-dg-cli
  -e ../../../python_modules/libraries/dagster-dg-core
  -e ../../../python_modules/libraries/dagster-cloud-cli
  -e .[core,mwaa,test-airflow3,in-airflow]
  dbt-duckdb
allowlist_externals =
  /bin/bash
  uv
  make
commands =
  # We need to rebuild the UI to ensure that the dagster-webserver can run
  make -C ../../.. rebuild_ui
  !windows: /bin/bash -c '! pip list --exclude-editable | grep -e dagster'
  pytest ./dagster_airlift_tests --snapshot-warn-unused -vv {posargs}
