# SCHEMA TEMPLATE - Copy and modify the structure below
type: dagster.PythonScriptComponent  # Required
attributes:  # Optional: Component attributes
  assets:  # Optional: 
    - # Array of AssetSpecKwargsModel objects:
      deps: <one of: array of string, string>  # Optional: The asset keys for the upstream assets that this asset depends on.
      description: <string>  # Optional: Human-readable description of the asset.
      metadata: <one of: object, string>  # Optional: Additional metadata for the asset.
      group_name: <string>  # Optional: Used to organize assets into groups, defaults to 'default'.
      skippable: <one of: boolean, string>  # Optional: Whether this asset can be omitted during materialization, causing downstream dependencies to skip.
      code_version: <string>  # Optional: A version representing the code that produced the asset. Increment this value when the code changes.
      owners: <one of: array of string, string>  # Optional: A list of strings representing owners of the asset. Each string can be a user's email address, or a team name prefixed with `team:`, e.g. `team:finops`.
      tags: <one of: object, string>  # Optional: Tags for filtering and organizing.
      kinds: <one of: array of string, string>  # Optional: A list of strings representing the kinds of the asset. These will be made visible in the Dagster UI.
      automation_condition: <string>  # Optional: The condition under which the asset will be automatically materialized.
      partitions_def:  # Optional: The partitions definition for the asset.
        type: <string>  # Optional: 
        start_date: <string>  # Required: 
        end_date: <string>  # Optional: 
        timezone: <string>  # Optional: 
        minute_offset: <integer>  # Optional: 
      key: <string>  # Required: A unique identifier for the asset.
  checks:  # Optional: 
    - # Array of AssetCheckSpecKwargsModel objects:
      name: <string>  # Required: 
      asset: <string>  # Required: A unique identifier for the asset.
      additional_deps: <one of: array of string, string>  # Optional: 
      description: <string>  # Optional: 
      blocking: <one of: boolean, string>  # Optional: 
      metadata: <one of: object, string>  # Optional: 
      automation_condition: <string>  # Optional: 
  execution:  # Required: 
    name: <string>  # Optional: 
    tags: <one of: object, string>  # Optional: 
    description: <string>  # Optional: 
    pool: <string>  # Optional: 
    backfill_policy:  # Optional: 
      type: <string>  # Optional: 
    type: <one of: string, string>  # Optional: 
    path: <string>  # Required: 
    args: <one of: array of string, string>  # Optional: 

---
# EXAMPLE VALUES - Valid YAML with sample data
type: "dagster.PythonScriptComponent"
attributes:
  assets:
    -
      deps:
        - "example_string"
      description: "example_string"
      metadata:
        key: "value"
      group_name: "example_string"
      skippable: true
      code_version: "example_string"
      owners:
        - "example_string"
      tags:
        key: "value"
      kinds:
        - "example_string"
      automation_condition: "example_string"
      partitions_def:
        type: "example_string"
        start_date: "example_string"
        end_date: "example_string"
        timezone: "example_string"
        minute_offset: 1
      key: "example_string"
  checks:
    -
      name: "example_string"
      asset: "example_string"
      additional_deps:
        - "example_string"
      description: "example_string"
      blocking: true
      metadata:
        key: "value"
      automation_condition: "example_string"
  execution:
    name: "example_string"
    tags:
      key: "value"
    description: "example_string"
    pool: "example_string"
    backfill_policy:
      type: "example_string"
    type: "example_string"
    path: "example_string"
    args:
      - "example_string"