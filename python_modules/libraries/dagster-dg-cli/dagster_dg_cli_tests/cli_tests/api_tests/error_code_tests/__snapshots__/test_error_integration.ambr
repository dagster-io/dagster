# serializer version: 1
# name: TestErrorIntegration.test_complete_error_flow_json_output[json_error_flow_error_invalid_asset_key_empty]
  dict({
    'command': "dg api asset get '' --json",
    'description': 'Empty asset key should trigger validation error',
    'exit_code': 5,
    'expected_code': 'INVALID_SUBSET',
    'expected_status': 400,
    'output': '''
      {"error": "Asset not found: ''", "code": "INTERNAL_ERROR", "statusCode": 500, "type": "server_error"}
  
    ''',
    'scenario': 'error_invalid_asset_key_empty',
  })
# ---
# name: TestErrorIntegration.test_complete_error_flow_json_output[json_error_flow_error_invalid_asset_key_malformed]
  dict({
    'command': "dg api asset get 'invalid::asset::key' --json",
    'description': 'Malformed asset key with invalid characters',
    'exit_code': 5,
    'expected_code': 'INVALID_SUBSET',
    'expected_status': 400,
    'output': '''
      {"error": "Asset not found: 'invalid::asset::key'", "code": "INTERNAL_ERROR", "statusCode": 500, "type": "server_error"}
  
    ''',
    'scenario': 'error_invalid_asset_key_malformed',
  })
# ---
# name: TestErrorIntegration.test_complete_error_flow_text_output[text_error_flow_error_asset_not_found_text]
  dict({
    'command': 'dg api asset get nonexistent-asset-key',
    'description': 'Asset not found error in text format',
    'exit_code': 1,
    'expected_code': 'ASSET_NOT_FOUND',
    'expected_status': 404,
    'output': '''
      Error querying Dagster Plus API: Asset not found: nonexistent-asset-key
  
    ''',
    'scenario': 'error_asset_not_found_text',
  })
# ---
# name: TestErrorIntegration.test_complete_error_flow_text_output[text_error_flow_error_unauthorized_text]
  dict({
    'command': 'dg api asset list',
    'description': 'Authentication error in text format',
    'exit_code': 0,
    'expected_code': 'UNAUTHORIZED',
    'expected_status': 401,
    'output': '''
      Asset Key: aws/cloud-prod/user_roles
      ID: dagster_open_platform.__repository__.["aws", "cloud-prod", "user_roles"]
      Description: Snowflake stages for AWS data, creates new stages for new assets, refreses existing stages.
      Group: aws_stages
      Kinds: None
      
      Asset Key: aws/cloud-prod/workspace_staging_asset_checks
      ID: dagster_open_platform.__repository__.["aws", "cloud-prod", "workspace_staging_asset_checks"]
      Description: Snowflake stages for AWS data, creates new stages for new assets, refreses existing stages.
      Group: aws_stages
      Kinds: None
      
      Asset Key: aws/cloud-prod/workspace_staging_assets
      ID: dagster_open_platform.__repository__.["aws", "cloud-prod", "workspace_staging_assets"]
      Description: Snowflake stages for AWS data, creates new stages for new assets, refreses existing stages.
      Group: aws_stages
      Kinds: None
      
      Asset Key: aws/cloud-prod/workspace_staging_external_repo_metadata
      ID: dagster_open_platform.__repository__.["aws", "cloud-prod", "workspace_staging_external_repo_metadata"]
      Description: Snowflake stages for AWS data, creates new stages for new assets, refreses existing stages.
      Group: aws_stages
      Kinds: None
      
      Asset Key: aws/cloud-prod/workspace_staging_jobs
      ID: dagster_open_platform.__repository__.["aws", "cloud-prod", "workspace_staging_jobs"]
      Description: Snowflake stages for AWS data, creates new stages for new assets, refreses existing stages.
      Group: aws_stages
      Kinds: None
      
      Asset Key: aws/cloud-prod/workspace_staging_metadata
      ID: dagster_open_platform.__repository__.["aws", "cloud-prod", "workspace_staging_metadata"]
      Description: Snowflake stages for AWS data, creates new stages for new assets, refreses existing stages.
      Group: aws_stages
      Kinds: None
      
      Asset Key: aws/cloud-prod/workspace_staging_partitions
      ID: dagster_open_platform.__repository__.["aws", "cloud-prod", "workspace_staging_partitions"]
      Description: Snowflake stages for AWS data, creates new stages for new assets, refreses existing stages.
      Group: aws_stages
      Kinds: None
      
      Asset Key: aws/cloud-prod/workspace_staging_pipelines
      ID: dagster_open_platform.__repository__.["aws", "cloud-prod", "workspace_staging_pipelines"]
      Description: Snowflake stages for AWS data, creates new stages for new assets, refreses existing stages.
      Group: aws_stages
      Kinds: None
  
    ''',
    'scenario': 'error_unauthorized_text',
  })
# ---
