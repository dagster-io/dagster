# Success scenarios for log get with various run IDs and options

# Basic success scenarios - logs with different content types
success_logs_with_errors_json:
  command: "dg api log get 85156191-170d-4229-8eba-14450b6ca9e3 --json --limit 50"

success_logs_with_errors_text:
  command: "dg api log get 85156191-170d-4229-8eba-14450b6ca9e3 --limit 50"

success_logs_basic_json:
  command: "dg api log get b45fff8a-7def-43b8-805d-1cf5f435c997 --json --limit 20"

success_logs_basic_text:
  command: "dg api log get b45fff8a-7def-43b8-805d-1cf5f435c997 --limit 20"

# Filtered scenarios (no recordings - these are complex to set up)
success_logs_error_level_only_json:
  command: "dg api log get 85156191-170d-4229-8eba-14450b6ca9e3 --level ERROR --json"

success_logs_error_level_only_text:
  command: "dg api log get 85156191-170d-4229-8eba-14450b6ca9e3 --level ERROR"

success_logs_debug_level_json:
  command: "dg api log get 85156191-170d-4229-8eba-14450b6ca9e3 --level DEBUG --json --limit 10"

success_logs_debug_level_text:
  command: "dg api log get 85156191-170d-4229-8eba-14450b6ca9e3 --level DEBUG --limit 10"

success_logs_step_filter_json:
  command: "dg api log get 85156191-170d-4229-8eba-14450b6ca9e3 --step process_chunk --json --limit 15"

success_logs_step_filter_text:
  command: "dg api log get 85156191-170d-4229-8eba-14450b6ca9e3 --step process_chunk --limit 15"

success_logs_small_limit_json:
  command: "dg api log get 85156191-170d-4229-8eba-14450b6ca9e3 --json --limit 5"
  has_recording: false

success_logs_small_limit_text:
  command: "dg api log get 85156191-170d-4229-8eba-14450b6ca9e3 --limit 5"
  has_recording: false

success_logs_with_cursor_json:
  command: "dg api log get 85156191-170d-4229-8eba-14450b6ca9e3 --json --limit 10 --cursor eyJza2lwIjo1fQ=="
  has_recording: false

success_logs_with_cursor_text:
  command: "dg api log get 85156191-170d-4229-8eba-14450b6ca9e3 --limit 10 --cursor eyJza2lwIjo1fQ=="
  has_recording: false

# Empty logs scenario
success_logs_empty_json:
  command: "dg api log get empty-run-uuid-0000-0000-000000000000 --json"

success_logs_empty_text:
  command: "dg api log get empty-run-uuid-0000-0000-000000000000"

# Error scenarios
error_run_not_found_json:
  command: "dg api log get nonexistent-run-uuid-1234-5678-900000000000 --json"

error_run_not_found_text:
  command: "dg api log get nonexistent-run-uuid-1234-5678-900000000000"

error_malformed_run_id_json:
  command: "dg api log get invalid-uuid-format --json"
  has_recording: false

error_malformed_run_id_text:
  command: "dg api log get invalid-uuid-format"
  has_recording: false

error_empty_run_id_json:
  command: "dg api log get '' --json"
  has_recording: false

error_empty_run_id_text:
  command: "dg api log get ''"
  has_recording: false

error_invalid_level_json:
  command: "dg api log get 85156191-170d-4229-8eba-14450b6ca9e3 --level INVALID --json"
  has_recording: false

error_invalid_level_text:
  command: "dg api log get 85156191-170d-4229-8eba-14450b6ca9e3 --level INVALID"
  has_recording: false
