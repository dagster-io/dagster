"""Hardcoded exclude lists for public API validation.

This file contains all the symbols that are known to have @public API inconsistencies.
These lists allow incremental fixing while preventing new issues from being introduced.
"""

# Symbols marked @public but not yet documented in RST files
EXCLUDE_MISSING_RST = {
    # Components system - new functionality being developed
    "dagster.components.definitions.definitions",
    "dagster.components.core.load_defs.build_defs_for_component",
    "dagster.components.core.load_defs.load_from_defs_folder",
    "dagster.components.core.defs_module.DefsFolderComponent",
    "dagster.components.core.context.ComponentDeclLoadContext",
    "dagster.components.core.context.ComponentLoadContext",
    "dagster.components.component.component_loader.component",
    "dagster.components.component.component_loader.component_instance",
    "dagster.components.component.component.ComponentTypeSpec",
    "dagster.components.component.component.Component",
    "dagster.components.resolved.model.Model",
    "dagster.components.resolved.model.Resolver",
    "dagster.components.resolved.context.ResolutionContext",
    "dagster.components.resolved.base.Resolvable",
    "dagster.components.scaffold.scaffold.scaffold_with",
    "dagster.components.scaffold.scaffold.ScaffoldRequest",
    "dagster.components.scaffold.scaffold.Scaffolder",
    "dagster.components.lib.sql_component.sql_component.SqlComponent",
    "dagster.components.core.component_tree.ComponentTree",
    # Core internal functionality
    "dagster._core.definitions.definitions_class.create_repository_using_definitions_args",
    # Core storage and compute management - internal functionality
    "dagster._core.storage.compute_log_manager.ForkedPdb",
    "dagster._core.definitions.output.DynamicOutputDefinition",
    "dagster._core.storage.file_manager.FileManager",
    "dagster._core.instance.ref.InstanceRef",
    "dagster._core.storage.event_log.base.AssetRecord",
    "dagster._core.storage.event_log.base.EventLogStorage",
    "dagster._core.storage.schedules.base.ScheduleStorage",
    "dagster._core.storage.runs.base.RunStorage",
    "dagster._core.storage.event_log.sqlite.consolidated_sqlite_event_log.ConsolidatedSqliteEventLogStorage",
    # Component exports at top level
    "dagster.build_defs_for_component",
    "dagster.ComponentTypeSpec",
    "dagster.scaffold_with",
    "dagster.ScaffoldRequest",
    "dagster.Scaffolder",
    "dagster.SqlComponent",
    "dagster_sling.SlingMode",
    # Additional core internal functionality - internal module paths
    "dagster._utils.forked_pdb.ForkedPdb",
    "dagster._serdes.config_class.ConfigurableClassData",
    "dagster._serdes.config_class.ConfigurableClass",
    "dagster._core.launcher.base.RunLauncher",
    "dagster._core.scheduler.scheduler.Scheduler",
    "dagster._core.storage.compute_log_manager.ComputeLogManager",
    "dagster._core.storage.base_storage.DagsterStorage",
    "dagster._core.storage.noop_compute_log_manager.NoOpComputeLogManager",
    "dagster._core.storage.root.LocalArtifactStorage",
    "dagster._core.storage.local_compute_log_manager.LocalComputeLogManager",
    # Library pipes clients
    "dagster_aws.pipes.clients.emr_containers.PipesEMRContainersClient",
    "dagster_aws.pipes.clients.emr.PipesEMRClient",
    "dagster_aws.pipes.clients.emr_serverless.PipesEMRServerlessClient",
    "dagster_gcp.pipes.clients.dataproc_job.PipesDataprocJobClient",
    # Library resources
    "dagster_openai.resources.with_usage_metadata",
    "dagster_openai.resources.OpenAIResource",
    "dagster_sling.SlingMode",
    "dagster_sling.resources.SlingConnectionResource",
    # New public APIs missing RST documentation
    "dagster.build_defs_for_component",
    "dagster.ComponentTypeSpec",
    "dagster.scaffold_with",
    "dagster.ScaffoldRequest",
    "dagster.Scaffolder",
    "dagster.SqlComponent",
    # Library components
    "dagster_snowflake.components.sql_component.component.SnowflakeConnectionComponentBase",
}

# Symbols marked @public but not exported at top-level
EXCLUDE_MISSING_EXPORT = {
    # These are internal symbols that should either be exported or have @public removed
    "dagster._core.definitions.definitions_class.create_repository_using_definitions_args",
    "dagster.components.core.load_defs.build_defs_for_component",
    "dagster.components.core.load_defs.load_from_defs_folder",
    "dagster.components.core.defs_module.DefsFolderComponent",
    "dagster.components.core.context.ComponentDeclLoadContext",
    "dagster.components.core.context.ComponentLoadContext",
    "dagster.components.component.component_loader.component",
    "dagster.components.component.component_loader.component_instance",
    "dagster.components.component.component.ComponentTypeSpec",
    "dagster.components.component.component.Component",
    "dagster.components.resolved.model.Model",
    "dagster.components.resolved.model.Resolver",
    "dagster.components.resolved.context.ResolutionContext",
    "dagster.components.resolved.base.Resolvable",
    "dagster.components.scaffold.scaffold.scaffold_with",
    "dagster.components.scaffold.scaffold.ScaffoldRequest",
    "dagster.components.scaffold.scaffold.Scaffolder",
}

# Hardcoded list of all RST symbols missing @public decorators
EXCLUDE_MISSING_PUBLIC = {
    "dagster.BetaWarning",
    "dagster.ComponentTree",
    "dagster.DefaultRunCoordinator",
    "dagster.PreviewWarning",
    "dagster.PreviewWarning",
    "dagster.SkipReason",
    "dagster.SpecificPartitionsPartitionMapping",
    "dagster.SqlEventLogStorage",
    "dagster.SqlRunStorage",
    "dagster.SqlScheduleStorage",
    "dagster.SqliteEventLogStorage",
    "dagster.SqliteRunStorage",
    "dagster.SqliteScheduleStorage",
    "dagster.StaticPartitionMapping",
    "dagster.StaticPartitionsDefinition",
    "dagster.StepExecutionContext",
    "dagster.StepLauncher",
    "dagster.StepRunRef",
    "dagster.SupersessionWarning",
    "dagster.TimeWindow",
    "dagster.TimeWindowPartitionMapping",
    "dagster.TimeWindowPartitionsDefinition",
    "dagster.TypeCheck",
    "dagster.UPathIOManager",
    "dagster.WeeklyPartitionsDefinition",
    "dagster.build_column_schema_change_checks",
    "dagster.build_last_update_freshness_checks",
    "dagster.build_metadata_bounds_checks",
    "dagster.build_reconstructable_job",
    "dagster.build_schedule_from_partitioned_job",
    "dagster.build_sensor_for_freshness_checks",
    "dagster.build_time_partition_freshness_checks",
    "dagster.colored_console_logger",
    "dagster.config_from_files",
    "dagster.config_from_pkg_resources",
    "dagster.config_from_yaml_strings",
    "dagster.configured",
    "dagster.file_relative_path",
    "dagster.json_console_logger",
    "dagster.link_code_references_to_git",
    "dagster.load_asset_checks_from_current_module",
    "dagster.load_asset_checks_from_modules",
    "dagster.load_asset_checks_from_package_module",
    "dagster.load_asset_checks_from_package_name",
    "dagster.load_assets_from_current_module",
    "dagster.load_assets_from_modules",
    "dagster.load_assets_from_package_module",
    "dagster.load_assets_from_package_name",
    "dagster.load_definitions_from_current_module",
    "dagster.load_definitions_from_module",
    "dagster.load_definitions_from_modules",
    "dagster.load_definitions_from_package_module",
    "dagster.load_definitions_from_package_name",
    "dagster.usable_as_dagster_type",
    "dagster.user_code_error_boundary",
    "dagster.validate_run_config",
    "dagster.with_resources",
    "dagster.with_source_code_references",
    "dagster_airbyte.AirbyteCloudWorkspace",
    "dagster_airbyte.DagsterAirbyteTranslator",
    "dagster_airbyte.airbyte_assets",
    "dagster_airbyte.build_airbyte_assets",
    "dagster_airbyte.build_airbyte_assets_definitions",
    "dagster_airbyte.load_airbyte_cloud_asset_specs",
    "dagster_airbyte.load_assets_from_airbyte_instance",
    "dagster_airlift.AirflowAuthBackend",
    "dagster_airlift.AirflowBasicAuthBackend",
    "dagster_airlift.AirflowDefinitionsData",
    "dagster_airlift.AirflowInstance",
    "dagster_airlift.AirflowInstanceComponent",
    "dagster_airlift.AirflowProxiedState",
    "dagster_airlift.BaseDagsterAssetsOperator",
    "dagster_airlift.BaseProxyDAGToDagsterOperator",
    "dagster_airlift.BaseProxyTaskToDagsterOperator",
    "dagster_airlift.DagInfo",
    "dagster_airlift.DagProxiedState",
    "dagster_airlift.DagSelectorFn",
    "dagster_airlift.DagsterEventTransformerFn",
    "dagster_airlift.DefaultProxyDAGToDagsterOperator",
    "dagster_airlift.DefaultProxyTaskToDagsterOperator",
    "dagster_airlift.MwaaSessionAuthBackend",
    "dagster_airlift.TaskHandleDict",
    "dagster_airlift.TaskProxiedState",
    "dagster_airlift.assets_with_dag_mappings",
    "dagster_airlift.assets_with_multiple_task_mappings",
    "dagster_airlift.assets_with_task_mappings",
    "dagster_airlift.build_defs_from_airflow_instance",
    "dagster_airlift.load_proxied_state_from_yaml",
    "dagster_airlift.proxying_to_dagster",
    "dagster_aws.emr.EmrError",
    "dagster_aws.emr.EmrJobRunner",
    "dagster_aws.pipes.PipesCloudWatchMessageReader",
    "dagster_aws.pipes.PipesECSClient",
    "dagster_aws.pipes.PipesEMRClient",
    "dagster_aws.pipes.PipesEMRContainersClient",
    "dagster_aws.pipes.PipesEMRServerlessClient",
    "dagster_aws.pipes.PipesGlueClient",
    "dagster_aws.pipes.PipesLambdaClient",
    "dagster_aws.pipes.PipesLambdaEventContextInjector",
    "dagster_aws.pipes.PipesS3ContextInjector",
    "dagster_aws.pipes.PipesS3MessageReader",
    "dagster_aws.s3.S3ComputeLogManager",
    "dagster_aws.s3.S3FileHandle",
    "dagster_aws.ssm.ParameterStoreTag",
    "dagster_azure.adls2.ADLS2FileHandle",
    "dagster_azure.blob.AzureBlobComputeLogManager",
    "dagster_census.CensusOutput",
    "dagster_census.CensusResource",
    "dagster_databricks.DatabricksClient",
    "dagster_databricks.DatabricksError",
    "dagster_databricks.PipesDatabricksClient",
    "dagster_databricks.PipesDbfsContextInjector",
    "dagster_databricks.PipesDbfsLogReader",
    "dagster_databricks.PipesDbfsMessageReader",
    "dagster_databricks.create_databricks_run_now_op",
    "dagster_databricks.create_databricks_submit_run_op",
    "dagster_dbt.DagsterDbtTranslator",
    "dagster_dbt.DagsterDbtTranslatorSettings",
    "dagster_dbt.DbtCliEventMessage",
    "dagster_dbt.DbtCliInvocation",
    "dagster_dbt.DbtCliResource",
    "dagster_dbt.DbtCloudClientResource",
    "dagster_dbt.DbtManifestAssetSelection",
    "dagster_dbt.DbtProject",
    "dagster_dbt.build_dbt_asset_selection",
    "dagster_dbt.build_freshness_checks_from_dbt_assets",
    "dagster_dbt.build_schedule_from_dbt_selection",
    "dagster_dbt.core.dbt_cli_invocation.DbtEventIterator",
    "dagster_dbt.dbt_assets",
    "dagster_dbt.default_group_from_dbt_resource_props",
    "dagster_dbt.default_metadata_from_dbt_resource_props",
    "dagster_dbt.get_asset_key_for_model",
    "dagster_dbt.get_asset_key_for_source",
    "dagster_dbt.get_asset_keys_by_output_name_for_source",
    "dagster_dbt.group_from_dbt_resource_props_fallback_to_directory",
    "dagster_dbt.load_assets_from_dbt_cloud_job",
    "dagster_deltalake_pandas.DeltaLakePandasTypeHandler",
    "dagster_deltalake_polars.DeltaLakePolarsTypeHandler",
    "dagster_dlt.DagsterDltResource",
    "dagster_dlt.DagsterDltTranslator",
    "dagster_dlt.build_dlt_asset_specs",
    "dagster_dlt.dlt_assets",
    "dagster_docker.PipesDockerClient",
    "dagster_docker.PipesDockerLogsMessageReader",
    "dagster_docker.execute_docker_container",
    "dagster_duckdb_pandas.DuckDBPandasTypeHandler",
    "dagster_duckdb_polars.DuckDBPolarsTypeHandler",
    "dagster_duckdb_pyspark.DuckDBPySparkTypeHandler",
    "dagster_fivetran.ConnectorSelectorFn",
    "dagster_fivetran.DagsterFivetranTranslator",
    "dagster_fivetran.FivetranWorkspace",
    "dagster_fivetran.build_fivetran_assets",
    "dagster_fivetran.build_fivetran_assets_definitions",
    "dagster_fivetran.fivetran_assets",
    "dagster_fivetran.fivetran_event_iterator.FivetranEventIterator",
    "dagster_fivetran.load_assets_from_fivetran_instance",
    "dagster_fivetran.load_fivetran_asset_specs",
    "dagster_gcp.BigQueryError",
    "dagster_gcp.GCSFileHandle",
    "dagster_gcp.bq_create_dataset",
    "dagster_gcp.bq_delete_dataset",
    "dagster_gcp.bq_op_for_queries",
    "dagster_gcp.fetch_last_updated_timestamps",
    "dagster_gcp.gcs.GCSComputeLogManager",
    "dagster_gcp.gcs.sensor.get_gcs_keys",
    "dagster_gcp.import_df_to_bq",
    "dagster_gcp.import_file_to_bq",
    "dagster_gcp.import_gcs_paths_to_bq",
    "dagster_gcp.pipes.PipesDataprocJobClient",
    "dagster_gcp.pipes.PipesGCSContextInjector",
    "dagster_gcp.pipes.PipesGCSMessageReader",
    "dagster_gcp_pandas.BigQueryPandasTypeHandler",
    "dagster_gcp_pyspark.BigQueryPySparkTypeHandler",
    "dagster_ge.ge_validation_op_factory",
    "dagster_github.GithubClient",
    "dagster_graphql.DagsterGraphQLClient",
    "dagster_graphql.InvalidOutputErrorInfo",
    "dagster_graphql.ReloadRepositoryLocationInfo",
    "dagster_graphql.ReloadRepositoryLocationStatus",
    "dagster_iceberg.config.IcebergCatalogConfig",
    "dagster_iceberg.handler.IcebergBaseTypeHandler",
    "dagster_iceberg.io_manager.base.IcebergIOManager",
    "dagster_k8s.PipesK8sClient",
    "dagster_k8s.PipesK8sPodLogsMessageReader",
    "dagster_k8s.execute_k8s_job",
    "dagster_looker.DagsterLookerApiTranslator",
    "dagster_looker.DagsterLookerLkmlTranslator",
    "dagster_looker.LookerFilter",
    "dagster_looker.LookerResource",
    "dagster_looker.LookerStructureData",
    "dagster_looker.LookerStructureType",
    "dagster_looker.RequestStartPdtBuild",
    "dagster_looker.build_looker_asset_specs",
    "dagster_looker.build_looker_pdt_assets_definitions",
    "dagster_looker.load_looker_asset_specs",
    "dagster_msteams.make_teams_on_run_failure_sensor",
    "dagster_mysql.MySQLEventLogStorage",
    "dagster_mysql.MySQLRunStorage",
    "dagster_mysql.MySQLScheduleStorage",
    "dagster_pandas.PandasColumn",
    "dagster_pandas.RowCountConstraint",
    "dagster_pandas.StrictColumnsConstraint",
    "dagster_pandas.create_dagster_pandas_dataframe_type",
    "dagster_pandera.pandera_schema_to_dagster_type",
    "dagster_pipes.DagsterPipesError",
    "dagster_pipes.DagsterPipesWarning",
    "dagster_pipes.PipesBlobStoreMessageWriter",
    "dagster_pipes.PipesBlobStoreMessageWriterChannel",
    "dagster_pipes.PipesBufferedFilesystemMessageWriterChannel",
    "dagster_pipes.PipesCliArgsParamsLoader",
    "dagster_pipes.PipesContext",
    "dagster_pipes.PipesContextLoader",
    "dagster_pipes.PipesDbfsContextLoader",
    "dagster_pipes.PipesDbfsMessageWriter",
    "dagster_pipes.PipesDefaultContextLoader",
    "dagster_pipes.PipesDefaultMessageWriter",
    "dagster_pipes.PipesEnvVarParamsLoader",
    "dagster_pipes.PipesFileMessageWriterChannel",
    "dagster_pipes.PipesGCSContextLoader",
    "dagster_pipes.PipesGCSMessageWriter",
    "dagster_pipes.PipesGCSMessageWriterChannel",
    "dagster_pipes.PipesMappingParamsLoader",
    "dagster_pipes.PipesMessageWriter",
    "dagster_pipes.PipesMessageWriterChannel",
    "dagster_pipes.PipesParamsLoader",
    "dagster_pipes.PipesS3ContextLoader",
    "dagster_pipes.PipesS3MessageWriter",
    "dagster_pipes.PipesS3MessageWriterChannel",
    "dagster_pipes.PipesStreamMessageWriterChannel",
    "dagster_pipes.decode_env_var",
    "dagster_pipes.encode_env_var",
    "dagster_pipes.open_dagster_pipes",
    "dagster_powerbi.DagsterPowerBITranslator",
    "dagster_powerbi.PowerBIServicePrincipal",
    "dagster_powerbi.PowerBIToken",
    "dagster_powerbi.PowerBIWorkspace",
    "dagster_powerbi.build_semantic_model_refresh_asset_definition",
    "dagster_powerbi.load_powerbi_asset_specs",
    "dagster_prometheus.resources.PrometheusClient",
    "dagster_sigma.DagsterSigmaTranslator",
    "dagster_sigma.SigmaBaseUrl",
    "dagster_sigma.SigmaDataset",
    "dagster_sigma.SigmaFilter",
    "dagster_sigma.SigmaOrganization",
    "dagster_sigma.SigmaWorkbook",
    "dagster_sigma.load_sigma_asset_specs",
    "dagster_slack.make_slack_on_run_failure_sensor",
    "dagster_sling.DagsterSlingTranslator",
    "dagster_sling.SlingResource",
    "dagster_sling.sling_assets",
    "dagster_snowflake.SnowflakeConnection",
    "dagster_snowflake.fetch_last_updated_timestamps",
    "dagster_snowflake.snowflake_op_for_query",
    "dagster_snowflake_pandas.SnowflakePandasTypeHandler",
    "dagster_snowflake_polars.SnowflakePolarsIOManager",
    "dagster_snowflake_polars.SnowflakePolarsTypeHandler",
    "dagster_snowflake_polars.snowflake_polars_io_manager",
    "dagster_snowflake_pyspark.SnowflakePySparkTypeHandler",
    "dagster_spark.SparkOpError",
    "dagster_spark.construct_spark_shell_command",
    "dagster_spark.create_spark_op",
    "dagster_spark.define_spark_config",
    "dagster_ssh.SSHResource",
    "dagster_tableau.DagsterTableauTranslator",
    "dagster_tableau.TableauCloudWorkspace",
    "dagster_tableau.TableauServerWorkspace",
    "dagster_tableau.build_tableau_materializable_assets_definition",
    "dagster_tableau.load_tableau_asset_specs",
    "dagster_tableau.parse_tableau_external_and_materializable_asset_specs",
    "dagster_tableau.tableau_assets",
    "dagster_wandb.SerializationModule",
    "dagster_wandb.WandbArtifactConfiguration",
    "dagster_wandb.run_launch_agent",
    "dagster_wandb.run_launch_job",
    "dagstermill.ConfigurableLocalOutputNotebookIOManager",
    "dagstermill.DagstermillError",
    "dagstermill.DagstermillExecutionContext",
    "dagstermill.define_dagstermill_asset",
    "dagstermill.define_dagstermill_op",
    "dagstermill.get_context",
    "dagstermill.yield_event",
    "dagstermill.yield_result",
    # New symbols missing @public decorators (added from test failures)
    "dagster.ForkedPdb",
    "dagster.DynamicOutput",
    "dagster.FileManager",
    "dagster.InstanceRef",
    "dagster.ConfigurableClass",
    "dagster.ConfigurableClassData",
    "dagster.LocalArtifactStorage",
    "dagster.DagsterStorage",
    "dagster.RunStorage",
    "dagster.EventLogStorage",
    "dagster.ConsolidatedSqliteEventLogStorage",
    "dagster.AssetRecord",
    "dagster.ComputeLogManager",
    "dagster.LocalComputeLogManager",
    "dagster.NoOpComputeLogManager",
    "dagster.RunLauncher",
    "dagster.Scheduler",
    "dagster.ScheduleStorage",
}
# Total: 297 symbols

# Modules to exclude from @public scanning
EXCLUDE_MODULES_FROM_PUBLIC_SCAN = set()

# RST files to exclude from symbol extraction
EXCLUDE_RST_FILES = set()


# Docstring validation exclude lists

# Symbols that currently have missing or empty docstrings
EXCLUDE_MISSING_DOCSTRINGS = {
    "dagster.AssetCheckExecutionContext",
    "dagster.AssetExecutionContext",
    "dagster.BoolSource",
    "dagster.IntSource",
    "dagster.StringSource",
    "dagster_dask.dask_resource",
    "dagster_databricks.databricks_client",
    "dagster_datahub.datahub_kafka_emitter",
    "dagster_datahub.datahub_rest_emitter",
    "dagster_gcp.bigquery_resource",
    "dagster_gcp.configurable_dataproc_op",
    "dagster_gcp.dataproc_op",
    "dagster_gcp.dataproc_resource",
    "dagster_gcp.gcs_resource",
    "dagster_gcp.import_df_to_bq",
    "dagster_gcp.import_file_to_bq",
    "dagster_gcp.import_gcs_paths_to_bq",
    "dagster_github.github_resource",
    "dagster_mlflow.end_mlflow_on_run_finished",
    "dagster_prometheus.prometheus_resource",
    "dagster_spark.spark_resource",
    "dagster_twilio.twilio_resource",
}
# Total: 22 symbols

# Symbols that currently have docstring validation errors
EXCLUDE_DOCSTRING_ERRORS = {
    "dagster.ExecuteInProcessResult",
    "dagster.scaffold_with",
    "dagster_dask.dask_executor",
    "dagster_fivetran.fivetran_resync_op",
    # TEMPORARY: Environmental AST parsing differences between macOS and Linux Docker
    # These symbols have valid docstrings that parse successfully locally but fail in Buildkite
    # due to environmental differences in Python AST parsing behavior
    "dagster.AssetExecutionContext.asset_partition_key_for_output",
    "dagster.AssetExecutionContext.asset_partition_key_range_for_input",
    "dagster.AssetExecutionContext.asset_partition_key_range_for_output",
    "dagster.AssetExecutionContext.asset_partition_keys_for_input",
    "dagster.AssetExecutionContext.asset_partition_keys_for_output",
    "dagster.AssetExecutionContext.asset_partitions_def_for_output",
    "dagster.AssetExecutionContext.asset_partitions_time_window_for_input",
    "dagster.AssetExecutionContext.asset_partitions_time_window_for_output",
    "dagster.CodeReferencesMetadataValue.job",
    "dagster.DagsterRunMetadataValue.job",
    "dagster.daily_partitioned_config",
    "dagster.DependencyDefinition",
    "dagster.Enum",
    "dagster.hourly_partitioned_config",
    "dagster.HourlyPartitionsDefinition",
    "dagster.MetadataValue.job",
    "dagster.monthly_partitioned_config",
    "dagster.NotebookMetadataValue.job",
    "dagster.OpExecutionContext.asset_partition_key_for_output",
    "dagster.OpExecutionContext.asset_partition_key_range_for_input",
    "dagster.OpExecutionContext.asset_partition_key_range_for_output",
    "dagster.OpExecutionContext.asset_partition_keys_for_input",
    "dagster.OpExecutionContext.asset_partition_keys_for_output",
    "dagster.OpExecutionContext.asset_partitions_def_for_output",
    "dagster.OpExecutionContext.asset_partitions_time_window_for_input",
    "dagster.OpExecutionContext.asset_partitions_time_window_for_output",
    "dagster.OutputMapping",
    "dagster.PathMetadataValue.job",
    "dagster.PythonArtifactMetadataValue.job",
    "dagster.TableColumnLineageMetadataValue.job",
    "dagster.TableMetadataValue.job",
    "dagster.TableSchemaMetadataValue.job",
    "dagster.TextMetadataValue.job",
    "dagster.TimestampMetadataValue.job",
    "dagster.UrlMetadataValue.job",
    "dagster.weekly_partitioned_config",
}
# Total: 40 symbols (4 original + 36 environmental AST parsing failures)

# Symbols that currently have docstring validation warnings
EXCLUDE_DOCSTRING_WARNINGS = {
    "dagster.Component",
    "dagster.ComponentLoadContext",
    "dagster.ConfigSchema",
    "dagster.DagsterInstance",
    "dagster.GraphDefinition.execute_in_process",
    "dagster.JobDefinition.execute_in_process",
    "dagster.ReexecutionOptions",
    "dagster.definitions",
    "dagster.execute_job",
    "dagster_celery_k8s.celery_k8s_job_executor",
    "dagster_docker.docker_container_op",
    "dagster_docker.docker_executor",
    "dagster_gcp.gcs_pickle_io_manager",
    "dagster_k8s.k8s_job_executor",
    "dagster_k8s.k8s_job_op",
}
# Total: 15 symbols
