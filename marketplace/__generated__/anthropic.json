{
  "frontmatter": {
    "id": "anthropic",
    "status": "published",
    "name": "Anthropic",
    "title": "Dagster & Anthropic",
    "excerpt": "Integrate Anthropic calls into your Dagster pipelines, without breaking the bank.",
    "partnerlink": "https://docs.anthropic.com/en/api/getting-started",
    "categories": [
      "Other"
    ],
    "enabledBy": [],
    "enables": [],
    "tags": [
      "dagster-supported"
    ]
  },
  "logoFilename": "anthropic.svg",
  "content": "The `dagster-anthropic` library allows you to easily interact with the Anthropic REST API using the Anthropic Python API to build AI steps into your Dagster pipelines. You can also log Anthropic API usage metadata in Dagster Insights, giving you detailed observability on API call credit consumption.\n\nWhen paired with Dagster assets, the resource automatically logs Anthropic usage metadata in asset metadata.\n\n### Installation\n\n```bash\npip install dagster dagster-anthropic\n```\n\n### Example\n\n\n```python\nfrom dagster_anthropic import AnthropicResource\n\nimport dagster as dg\n\n\n@dg.asset(compute_kind=\"anthropic\")\ndef anthropic_asset(context: dg.AssetExecutionContext, anthropic: AnthropicResource):\n    with anthropic.get_client(context) as client:\n        response = client.messages.create(\n            model=\"claude-3-5-sonnet-20241022\",\n            max_tokens=1024,\n            messages=[{\"role\": \"user\", \"content\": \"Say this is a test\"}],\n        )\n\n\ndefs = dg.Definitions(\n    assets=[anthropic_asset],\n    resources={\n        \"anthropic\": AnthropicResource(api_key=dg.EnvVar(\"ANTHROPIC_API_KEY\")),\n    },\n)\n```\n        \n\n### About Anthropic\n\nAnthropic is an AI research company focused on developing safe and ethical AI systems. Their flagship product, Claude, is a language model known for its strong capabilities in analysis, writing, and coding tasks while maintaining high standards of truthfulness and safety."
}