{
  "frontmatter": {
    "id": "awsSecretsmanager",
    "status": "published",
    "name": "Secrets Manager",
    "title": "Dagster & AWS Secrets Manager",
    "excerpt": "This integration allows you to manage, retrieve, and rotate credentials, API keys, and other secrets using AWS Secrets Manager.",
    "partnerlink": "https://aws.amazon.com/",
    "categories": [
      "Other"
    ],
    "enabledBy": [],
    "enables": [],
    "tags": [
      "dagster-supported"
    ]
  },
  "logoFilename": "aws-secretsmanager.svg",
  "content": "import Beta from '@site/docs/partials/\\_Beta.md';\n\n<Beta />\n\nThis integration allows you to manage, retrieve, and rotate credentials, API keys, and other secrets using [AWS Secrets Manager](https://aws.amazon.com/secrets-manager/).\n\n### Installation\n\n```bash\npip install dagster-aws\n```\n\n### Examples\n\n\n```python\nfrom dagster_aws.secretsmanager import (\n    SecretsManagerResource,\n    SecretsManagerSecretsResource,\n)\n\nimport dagster as dg\n\n\n@dg.asset\ndef my_asset(secretsmanager: SecretsManagerResource):\n    secret_value = secretsmanager.get_client().get_secret_value(\n        SecretId=\"arn:aws:secretsmanager:region:aws_account_id:secret:appauthexample-AbCdEf\"\n    )\n    return secret_value\n\n\n@dg.asset\ndef my_other_asset(secrets: SecretsManagerSecretsResource):\n    secret_value = secrets.fetch_secrets().get(\"my-secret-name\")\n    return secret_value\n\n\ndefs = dg.Definitions(\n    assets=[my_asset, my_other_asset],\n    resources={\n        \"secretsmanager\": SecretsManagerResource(region_name=\"us-west-1\"),\n        \"secrets\": SecretsManagerSecretsResource(\n            region_name=\"us-west-1\",\n            secrets_tag=\"dagster\",\n        ),\n    },\n)\n```\n        \n\n### About AWS Secrets Manager\n\n**AWS Secrets Manager** helps you protect access to your applications, services, and IT resources without the upfront cost and complexity of managing your own hardware security module infrastructure. With Secrets Manager, you can rotate, manage, and retrieve database credentials, API keys, and other secrets throughout their lifecycle. Users and applications retrieve secrets with a call to Secrets Manager APIs, eliminating the need to hardcode sensitive information in plain text."
}