{
  "frontmatter": {
    "id": "openai-index",
    "status": "published",
    "name": "OpenAI",
    "title": "Dagster & OpenAI",
    "excerpt": "Integrate OpenAI calls into your Dagster pipelines, without breaking the bank.",
    "partnerlink": "https://platform.openai.com/docs/introduction",
    "categories": ["Other"],
    "enabledBy": [],
    "enables": [],
    "tags": ["dagster-supported"]
  },
  "logoFilename": "openai.svg",
  "content": "The `dagster-openai` library allows you to easily interact with the OpenAI REST API using the OpenAI Python API to build AI steps into your Dagster pipelines. You can also log OpenAI API usage metadata in Dagster Insights, giving you detailed observability on API call credit consumption.\n\nWhen paired with Dagster assets, the resource automatically logs OpenAI usage metadata in asset metadata.\n\n### Installation\n\n```bash\npip install dagster dagster-openai\n```\n\n### Example\n\n\n```python\nfrom dagster_openai import OpenAIResource\n\nimport dagster as dg\n\n\n@dg.asset(compute_kind=\"OpenAI\")\ndef openai_asset(context: dg.AssetExecutionContext, openai: OpenAIResource):\n    with openai.get_client(context) as client:\n        client.chat.completions.create(\n            model=\"gpt-3.5-turbo\",\n            messages=[{\"role\": \"user\", \"content\": \"Say this is a test.\"}],\n        )\n\n\nopenai_asset_job = dg.define_asset_job(\n    name=\"openai_asset_job\", selection=\"openai_asset\"\n)\n\ndefs = dg.Definitions(\n    assets=[openai_asset],\n    jobs=[openai_asset_job],\n    resources={\n        \"openai\": OpenAIResource(api_key=dg.EnvVar(\"OPENAI_API_KEY\")),\n    },\n)\n```\n        \n\n### About OpenAI\n\nOpenAI is a U.S. based artificial intelligence (AI) research organization with the goal of developing \"safe and beneficial\" artificial general intelligence, which it defines as \"highly autonomous systems that outperform humans at most economically valuable work\"."
}
