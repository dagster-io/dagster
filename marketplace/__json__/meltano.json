{
  "frontmatter": {
    "id": "meltano",
    "status": "published",
    "name": "Meltano",
    "title": "Dagster & Meltano",
    "excerpt": "Tap into open source configurable ETL+ and the Singer integration library.",
    "logoFilename": "meltano.svg",
    "partnerlink": "https://meltano.com/",
    "categories": ["ETL"],
    "enabledBy": [],
    "enables": [],
    "tags": ["community-supported", "etl"]
  },
  "content": "The `dagster-meltano` library allows you to run Meltano using Dagster. Design and configure ingestion jobs using the popular [Singer.io](https://singer.io) specification.\n\n**Note** that this integration can also be [managed from the Meltano platform](https://hub.meltano.com/utilities/dagster/) using `meltano add utility dagster` and configured using `meltano config dagster set --interactive`.\n\n### Installation\n\n```bash\npip install dagster-meltano\n```\n\n### Example\n\n\n```python\nfrom dagster_meltano import meltano_resource, meltano_run_op\n\nimport dagster as dg\n\n\n@dg.job(resource_defs={\"meltano\": meltano_resource})\ndef meltano_run_job():\n    tap_done = meltano_run_op(\"tap-1 target-1\")()\n    meltano_run_op(\"tap-2 target-2\")(tap_done)\n\n\ndefs = dg.Definitions(jobs=[meltano_run_job])\n```\n        \n\n### About Meltano\n\n[Meltano](https://meltano.com/) provides data engineers with a set of tools for easily creating and managing pipelines as code by providing a wide array of composable connectors. Meltano's 'CLI for ELT+' lets you test your changes before they go live."
}
