# Pipeline for testing issue-31069
# Tests the implementation of boilerplate definitions.py with @definitions and load_from_defs_folder

steps:
  - label: ":python: Run tests"
    command: |
      echo "--- Setting up Python virtual environment ---"
      python -m venv venv
      source venv/bin/activate
      pip install --upgrade pip

      echo "--- Installing dependencies ---"
      # Navigate to the correct directory to resolve the setuptools error
      cd python_modules/dagster
      pip install -e ".[dev]"
      cd ../.. # Return to the repository root

      echo "--- Running tests ---"
      pytest -v python_modules/dagster/dagster_tests/cli_tests/test_project_commands.py
    agents:
      queue: "default"

  - label: ":sparkles: Format check"
    command: |
      echo "--- Setting up Python virtual environment ---"
      python -m venv venv
      source venv/bin/activate
      pip install ruff

      echo "--- Running ruff format check ---"
      ruff check python_modules/dagster/dagster/_generate/templates/
    agents:
      queue: "default"
      
  - label: ":dagster: Manual test scaffolding"
    command: |
      echo "--- Setting up Python virtual environment and dependencies ---"
      python -m venv venv
      source venv/bin/activate
      pip install --upgrade pip
      
      # Install required Dagster dependencies from the correct directory
      cd python_modules/dagster
      pip install -e ".[dev]"
      cd ../.. # Return to the repository root

      echo "--- Creating temporary test directory ---"
      # Create a unique temp directory to avoid conflicts
      TEST_DIR="/tmp/test_scaffold_$(date +%s)"
      mkdir -p "$TEST_DIR"
      cd "$TEST_DIR"
      echo "Current working directory: $(pwd)"

      echo "--- Scaffolding new Dagster project ---"
      python -m dagster project scaffold --name test_project
      
      echo "--- Validating scaffolded file content ---"
      # Verify that the template contains the expected content
      if grep -q "@definitions" test_project/test_project/definitions.py && \
         grep -q "load_from_defs_folder" test_project/test_project/definitions.py; then
        echo "✅ Template validation successful!"
      else
        echo "❌ Template validation failed. Contents of definitions.py:"
        cat test_project/test_project/definitions.py
        exit 1
      fi
    agents:
      queue: "default"```
