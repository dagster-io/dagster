trigger:
  branches:
    include:
      - master
      - windows/*
pr: none
parameters:
  - name: py3_versions
    type: object
    default:
      - "3.10"
  - name: dagster_core_py3_env_suffixes
    type: object
    default:
      - api_tests
      - cli_tests
      - general_tests
      - launcher_tests
      - daemon_tests
      - daemon_sensor_tests
      - scheduler_tests
jobs:
  - job: "dagster"
    pool:
      vmImage: "windows-2019"
    strategy:
      matrix:
        ${{ each py_version in parameters.py3_versions }}:
          ${{ each env_suffix in parameters.dagster_core_py3_env_suffixes }}:
            ${{ replace(py_version, '.', '') }}-windows-${{ env_suffix }}:
              PACKAGE_ROOT: "python_modules\\dagster"
              PATH_BACK_TO_REPO_ROOT: "..\\.."
              DAGSTER_GIT_REPO_DIR: "..\\.."
              TOX_ENV: "py${{ replace(py_version, '.', '') }}-windows-${{ env_suffix }}"
              PYTHON_VERSION: "${{ py_version }}"

        ${{ each py_version in parameters.py3_versions }}:
          dagster-dg-cli-${{ replace(py_version, '.', '') }}:
            PACKAGE_ROOT: "python_modules\\libraries\\dagster-dg-cli"
            PATH_BACK_TO_REPO_ROOT: "..\\..\\.."
            DAGSTER_GIT_REPO_DIR: "..\\..\\.."
            TOX_ENV: windows
            PYTHON_VERSION: "${{ py_version }}"
    variables:
      PYTHONUTF8: "1"
      # Different APIs when running Python in windows will sometimes generate different paths for
      # the same file. In particular, "C:\Users\VssAdministrator" and "C:\Users\VSSADM~1" actually
      # refer to the same directory, but different APIs will return one of these two variants.
      # Tempdir commands can return the shorter "VSSADM~1" form. This can break our code when it
      # does lexical comparison of paths to ensure one path is a subdirectory of another. Lexical
      # comparisons are unaware of the underlying equality of the short and long paths.
      # 
      # To avoid this, we set the TEMP and TMP enivironment variables to ensure tempdir APIs always
      # return the long path.
      LONG_TEMP: '$(USERPROFILE)\AppData\Local\Temp'
    # Use PowerShell (`powershell`) instead of cmd shell (`script`) for better UTF-8 support.
    steps:
      - task: UsePythonVersion@0
        inputs:
          versionSpec: "$(PYTHON_VERSION)"
          architecture: "x64"
      - powershell: |
          pip install "tox<4.0.0" uv
        displayName: "Install tox & uv"
      - powershell: |
          cd $env:PACKAGE_ROOT
          tox -e $env:TOX_ENV
          cd $env:PATH_BACK_TO_REPO_ROOT
        displayName: "Run tests"
        env:
          # See note in the `variables` section above.
          TEMP: "$(LONG_TEMP)"
          TMP: "$(LONG_TEMP)"
      - task: PublishTestResults@2
        inputs:
          testResultsFiles: "**/test_results.xml"
          testRunTitle: "$(PACKAGE_ROOT) $(TOX_ENV)"
        condition: succeededOrFailed()
